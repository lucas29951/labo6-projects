app/
├── src
│   ├── androidTest
│   │   └── java
│   │       └── com
│   │           └── labdevs
│   │               └── comandar
│   │                   └── ExampleInstrumentedTest.java
│   ├── main
│   │   ├── java
│   │   │   └── com
│   │   │       └── labdevs
│   │   │           └── comandar
│   │   │               ├── data
│   │   │               │   ├── dao
│   │   │               │   │   ├── CamareroDao.java
│   │   │               │   │   ├── CategoriaProductoDao.java
│   │   │               │   │   ├── DetallePedidoDao.java
│   │   │               │   │   ├── MesaDao.java
│   │   │               │   │   ├── PedidoDao.java
│   │   │               │   │   └── ProductoDao.java
│   │   │               │   ├── database
│   │   │               │   │   ├── AppDatabase.java
│   │   │               │   │   └── Converters.java
│   │   │               │   ├── entity
│   │   │               │   │   ├── enums
│   │   │               │   │   │   ├── EstadoMesa.java
│   │   │               │   │   │   └── EstadoPedido.java
│   │   │               │   │   ├── Camarero.java
│   │   │               │   │   ├── CategoriaProducto.java
│   │   │               │   │   ├── DetallePedido.java
│   │   │               │   │   ├── Mesa.java
│   │   │               │   │   ├── Pedido.java
│   │   │               │   │   └── Producto.java
│   │   │               │   ├── model
│   │   │               │   │   └── ItemPedido.java
│   │   │               │   └── repository
│   │   │               │       └── AppRepository.java
│   │   │               ├── DetailProductActivity.java
│   │   │               ├── LoginActivity.java
│   │   │               ├── MainActivity.java
│   │   │               ├── ProfileActivity.java
│   │   │               ├── RegisterActivity.java
│   │   │               ├── ResumeActivity.java
│   │   │               └── TablesActivity.java
│   │   ├── res
│   │   │   ├── drawable
│   │   │   │   ├── account_circle_24px.xml
│   │   │   │   ├── arrow_back_24px.xml
│   │   │   │   ├── arrow_forward_ios_24px.xml
│   │   │   │   ├── dehaze_24px.xml
│   │   │   │   ├── ic_launcher_background.xml
│   │   │   │   ├── ic_launcher_foreground.xml
│   │   │   │   ├── panorama_24px.xml
│   │   │   │   └── settings_24px.xml
│   │   │   ├── layout
│   │   │   │   ├── activity_detail_product.xml
│   │   │   │   ├── activity_login.xml
│   │   │   │   ├── activity_main.xml
│   │   │   │   ├── activity_profile.xml
│   │   │   │   ├── activity_register.xml
│   │   │   │   ├── activity_resume.xml
│   │   │   │   ├── activity_tables.xml
│   │   │   │   ├── item_order_list.xml
│   │   │   │   └── item_table_list.xml
│   │   │   ├── mipmap-anydpi-v26
│   │   │   │   ├── ic_launcher_round.xml
│   │   │   │   └── ic_launcher.xml
│   │   │   ├── mipmap-hdpi
│   │   │   │   ├── ic_launcher_round.webp
│   │   │   │   └── ic_launcher.webp
│   │   │   ├── mipmap-mdpi
│   │   │   │   ├── ic_launcher_round.webp
│   │   │   │   └── ic_launcher.webp
│   │   │   ├── mipmap-xhdpi
│   │   │   │   ├── ic_launcher_round.webp
│   │   │   │   └── ic_launcher.webp
│   │   │   ├── mipmap-xxhdpi
│   │   │   │   ├── ic_launcher_round.webp
│   │   │   │   └── ic_launcher.webp
│   │   │   ├── mipmap-xxxhdpi
│   │   │   │   ├── ic_launcher_round.webp
│   │   │   │   └── ic_launcher.webp
│   │   │   ├── values
│   │   │   │   ├── colors.xml
│   │   │   │   ├── strings.xml
│   │   │   │   └── themes.xml
│   │   │   ├── values-night
│   │   │   │   └── themes.xml
│   │   │   └── xml
│   │   │       ├── backup_rules.xml
│   │   │       └── data_extraction_rules.xml
│   │   └── AndroidManifest.xml
│   └── test
│       └── java
│           └── com
│               └── labdevs
│                   └── comandar
│                       └── ExampleUnitTest.java
├── .gitignore
├── build.gradle.kts
└── proguard-rules.pro


===== src/androidTest/java/com/labdevs/comandar/ExampleInstrumentedTest.java =====
package com.labdevs.comandar;

import android.content.Context;

import androidx.test.platform.app.InstrumentationRegistry;
import androidx.test.ext.junit.runners.AndroidJUnit4;

import org.junit.Test;
import org.junit.runner.RunWith;

import static org.junit.Assert.*;

/**
 * Instrumented test, which will execute on an Android device.
 *
 * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
 */
@RunWith(AndroidJUnit4.class)
public class ExampleInstrumentedTest {
    @Test
    public void useAppContext() {
        // Context of the app under test.
        Context appContext = InstrumentationRegistry.getInstrumentation().getTargetContext();
        assertEquals("com.labdevs.comandar", appContext.getPackageName());
    }
}

===== src/main/java/com/labdevs/comandar/data/dao/CamareroDao.java =====
package com.labdevs.comandar.data.dao;

import androidx.lifecycle.LiveData;
import androidx.room.Dao;
import androidx.room.Insert;
import androidx.room.Query;
import androidx.room.Update;

import com.labdevs.comandar.data.entity.Camarero;

@Dao
public interface CamareroDao {
    // Requisito: "Permitir a los camareros crear una cuenta"
    @Insert
    void insert(Camarero camarero);

    // Requisito: "Administrar su información personal"
    @Update
    void update(Camarero camarero);

    // Requisito: "Iniciar sesión" (necesitamos buscar por email)
    @Query("SELECT * FROM camareros WHERE email = :email LIMIT 1")
    Camarero getCamareroByEmail(String email); // No es LiveData, el login es una acción única

    // Útil para recuperar el perfil una vez logueado
    @Query("SELECT * FROM camareros WHERE camarero_id = :id LIMIT 1")
    LiveData<Camarero> getCamareroById(int id);
}


===== src/main/java/com/labdevs/comandar/data/dao/CategoriaProductoDao.java =====
package com.labdevs.comandar.data.dao;

import androidx.lifecycle.LiveData;
import androidx.room.Dao;
import androidx.room.Insert;
import androidx.room.OnConflictStrategy;
import androidx.room.Query;

import com.labdevs.comandar.data.entity.CategoriaProducto;

import java.util.List;

@Dao
public interface CategoriaProductoDao {
    @Insert(onConflict = OnConflictStrategy.IGNORE)
    void insertAll(List<CategoriaProducto> categorias);

    // Requisito: Mostrar la lista de categorías en el menú
    @Query("SELECT * FROM categorias_producto ORDER BY nombre_categoria ASC")
    LiveData<List<CategoriaProducto>> getAllCategorias();
}


===== src/main/java/com/labdevs/comandar/data/dao/DetallePedidoDao.java =====
package com.labdevs.comandar.data.dao;

import androidx.lifecycle.LiveData;
import androidx.room.Dao;
import androidx.room.Delete;
import androidx.room.Insert;
import androidx.room.OnConflictStrategy;
import androidx.room.Query;
import androidx.room.Transaction;

import com.labdevs.comandar.data.entity.DetallePedido;
import com.labdevs.comandar.data.model.ItemPedido;

import java.util.List;

@Dao
public interface DetallePedidoDao {
    // Requisito: "Para cada producto solicitado, puede agregar..."
    // Usamos REPLACE: si se añade el mismo producto, se actualiza la entrada (ej. para cambiar cantidad)
    @Insert(onConflict = OnConflictStrategy.REPLACE)
    void insertOrUpdate(DetallePedido detalle);

    @Delete
    void delete(DetallePedido detalle);

    // Requisito: "La app calcula el total para su cobro" y muestra los ítems.
    // Usamos el POJO "ItemPedido".
    @Transaction
    @Query("SELECT " +
            "d.producto_id, p.nombre, d.cantidad, d.precio_unitario, d.caracteristicas_particulares " +
            "FROM detalles_pedido d " +
            "JOIN productos p ON d.producto_id = p.producto_id " +
            "WHERE d.pedido_id = :pedidoId")
    LiveData<List<ItemPedido>> getItemsPedidoConNombre(int pedidoId);
}


===== src/main/java/com/labdevs/comandar/data/dao/MesaDao.java =====
package com.labdevs.comandar.data.dao;

import androidx.lifecycle.LiveData;
import androidx.room.Dao;
import androidx.room.Insert;
import androidx.room.OnConflictStrategy;
import androidx.room.Query;
import androidx.room.Update;

import com.labdevs.comandar.data.entity.Mesa;

import java.util.List;

@Dao
public interface MesaDao {
    @Insert(onConflict = OnConflictStrategy.REPLACE)
    void insert(Mesa mesa);

    // Requisito: "El camarero se asigna una mesa" o "Desasignarse una mesa"
    @Update
    void update(Mesa mesa);

    // Requisito: "Debe poder ver un mapa gráfico con todas las mesas y su estado"
    // LiveData es perfecto aquí para que el mapa se actualice solo.
    @Query("SELECT * FROM mesas ORDER BY numero_mesa ASC")
    LiveData<List<Mesa>> getAllMesas();

    // Útil para una pantalla de "Mis Mesas"
    @Query("SELECT * FROM mesas WHERE camarero_id = :camareroId ORDER BY numero_mesa ASC")
    LiveData<List<Mesa>> getMesasByCamarero(int camareroId);
}


===== src/main/java/com/labdevs/comandar/data/dao/PedidoDao.java =====
package com.labdevs.comandar.data.dao;

import androidx.lifecycle.LiveData;
import androidx.room.Dao;
import androidx.room.Insert;
import androidx.room.Query;
import androidx.room.Update;

import com.labdevs.comandar.data.entity.Pedido;

@Dao
public interface PedidoDao {
    // Requisito: Iniciar la "confección del pedido" para una mesa
    @Insert
    long insert(Pedido pedido); // Devuelve el ID del nuevo pedido, muy útil

    // Requisito: "Reapertura", "Envío automático", "cerrada la comanda" (cambiar estado)
    @Update
    void update(Pedido pedido);

    // Requisito: Al seleccionar una mesa, ver si ya tiene un pedido abierto.
    @Query("SELECT * FROM pedidos WHERE mesa_id = :mesaId AND estado != 'cerrado' LIMIT 1")
    LiveData<Pedido> getPedidoActivoPorMesa(int mesaId);
}


===== src/main/java/com/labdevs/comandar/data/dao/ProductoDao.java =====
package com.labdevs.comandar.data.dao;

import androidx.lifecycle.LiveData;
import androidx.room.Dao;
import androidx.room.Insert;
import androidx.room.OnConflictStrategy;
import androidx.room.Query;

import com.labdevs.comandar.data.entity.Producto;

import java.util.List;

@Dao
public interface ProductoDao {
    @Insert(onConflict = OnConflictStrategy.IGNORE)
    void insertAll(List<Producto> productos);

    // Requisito: Mostrar los productos de una categoría seleccionada
    @Query("SELECT * FROM productos WHERE categoria_id = :categoriaId AND disponible = 1 ORDER BY nombre ASC")
    LiveData<List<Producto>> getProductosByCategoria(int categoriaId);
}


===== src/main/java/com/labdevs/comandar/data/database/AppDatabase.java =====
package com.labdevs.comandar.data.database;

import android.content.Context;

import androidx.room.Database;
import androidx.room.Room;
import androidx.room.RoomDatabase;
import androidx.room.TypeConverters;

import com.labdevs.comandar.data.dao.CamareroDao;
import com.labdevs.comandar.data.dao.CategoriaProductoDao;
import com.labdevs.comandar.data.dao.DetallePedidoDao;
import com.labdevs.comandar.data.dao.MesaDao;
import com.labdevs.comandar.data.dao.PedidoDao;
import com.labdevs.comandar.data.dao.ProductoDao;
import com.labdevs.comandar.data.entity.Camarero;
import com.labdevs.comandar.data.entity.CategoriaProducto;
import com.labdevs.comandar.data.entity.DetallePedido;
import com.labdevs.comandar.data.entity.Mesa;
import com.labdevs.comandar.data.entity.Pedido;
import com.labdevs.comandar.data.entity.Producto;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

@Database(entities = {Camarero.class, Mesa.class, Pedido.class, CategoriaProducto.class, Producto.class, DetallePedido.class},
        version = 1,
        exportSchema = false)
@TypeConverters({Converters.class})
public abstract class AppDatabase extends RoomDatabase {

    public abstract CamareroDao camareroDao();
    public abstract MesaDao mesaDao();
    public abstract PedidoDao pedidoDao();
    public abstract CategoriaProductoDao categoriaProductoDao();
    public abstract ProductoDao productoDao();
    public abstract DetallePedidoDao detallePedidoDao();

    private static volatile AppDatabase INSTANCE;
    private static final int NUMBER_OF_THREADS = 4;
    public static final ExecutorService databaseWriteExecutor =
            Executors.newFixedThreadPool(NUMBER_OF_THREADS);

    public static AppDatabase getDatabase(final Context context) {
        if (INSTANCE == null) {
            synchronized (AppDatabase.class) {
                if (INSTANCE == null) {
                    INSTANCE = Room.databaseBuilder(context.getApplicationContext(),
                                    AppDatabase.class, "gestion_camareros_db")
                            .fallbackToDestructiveMigration()
                            .build();
                }
            }
        }
        return INSTANCE;
    }
}


===== src/main/java/com/labdevs/comandar/data/database/Converters.java =====
package com.labdevs.comandar.data.database;

import androidx.room.TypeConverter;

import com.labdevs.comandar.data.entity.enums.EstadoMesa;
import com.labdevs.comandar.data.entity.enums.EstadoPedido;

import java.util.Date;


public class Converters {

    @TypeConverter
    public static Date fromTimestamp(Long value) {
        return value == null ? null : new Date(value);
    }

    @TypeConverter
    public static Long dateToTimestamp(Date date) {
        return date == null ? null : date.getTime();
    }


    @TypeConverter
    public static String fromEstadoMesa(EstadoMesa estado) {
        return estado == null ? null : estado.name();
    }

    @TypeConverter
    public static EstadoMesa toEstadoMesa(String estado) {
        return estado == null ? null : EstadoMesa.valueOf(estado);
    }


    @TypeConverter
    public static String fromEstadoPedido(EstadoPedido estado) {
        return estado == null ? null : estado.name();
    }

    @TypeConverter
    public static EstadoPedido toEstadoPedido(String estado) {
        return estado == null ? null : EstadoPedido.valueOf(estado);
    }
}


===== src/main/java/com/labdevs/comandar/data/entity/enums/EstadoMesa.java =====
package com.labdevs.comandar.data.entity.enums;

public enum EstadoMesa {
    libre,
    ocupada,
    reservada
}


===== src/main/java/com/labdevs/comandar/data/entity/enums/EstadoPedido.java =====
package com.labdevs.comandar.data.entity.enums;

public enum EstadoPedido {
    abierto,
    enviado,
    cerrado
}


===== src/main/java/com/labdevs/comandar/data/entity/Camarero.java =====
package com.labdevs.comandar.data.entity;

import androidx.annotation.NonNull;
import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.Index;
import androidx.room.PrimaryKey;

import java.util.Date;

@Entity(tableName = "camareros",
        indices = {@Index(value = {"email"}, unique = true)})
public class Camarero {
    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(name = "camarero_id")
    public int camareroId;

    @NonNull
    public String nombre;

    @NonNull
    public String apellido;

    @NonNull
    public String email;

    @NonNull
    @ColumnInfo(name = "password_hash")
    public String passwordHash;

    @ColumnInfo(name = "numero_contacto")
    public String numeroContacto;

    @ColumnInfo(name = "foto_url")
    public String fotoUrl;

    @NonNull
    @ColumnInfo(name = "created_at", defaultValue = "CURRENT_TIMESTAMP")
    public Date createdAt;
}


===== src/main/java/com/labdevs/comandar/data/entity/CategoriaProducto.java =====
package com.labdevs.comandar.data.entity;

import androidx.annotation.NonNull;
import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.Index;
import androidx.room.PrimaryKey;

@Entity(tableName = "categorias_producto",
        indices = {@Index(value = {"nombre_categoria"}, unique = true)})
public class CategoriaProducto {
    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(name = "categoria_id")
    public int categoriaId;

    @NonNull
    @ColumnInfo(name = "nombre_categoria")
    public String nombreCategoria;
}


===== src/main/java/com/labdevs/comandar/data/entity/DetallePedido.java =====
package com.labdevs.comandar.data.entity;

import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.ForeignKey;

@Entity(tableName = "detalles_pedido",
        primaryKeys = {"pedido_id", "producto_id"}, // Clave primaria compuesta
        foreignKeys = {
                @ForeignKey(entity = Pedido.class,
                        parentColumns = "pedido_id",
                        childColumns = "pedido_id",
                        onDelete = ForeignKey.CASCADE),
                @ForeignKey(entity = Producto.class,
                        parentColumns = "producto_id",
                        childColumns = "producto_id",
                        onDelete = ForeignKey.RESTRICT)
        })
public class DetallePedido {
    @ColumnInfo(name = "pedido_id")
    public int pedidoId;

    @ColumnInfo(name = "producto_id")
    public int productoId;

    public int cantidad;

    @ColumnInfo(name = "precio_unitario")
    public double precioUnitario;

    @ColumnInfo(name = "caracteristicas_particulares")
    public String caracteristicasParticulares;

    public DetallePedido() {
        this.cantidad = 1;
    }
}


===== src/main/java/com/labdevs/comandar/data/entity/Mesa.java =====
package com.labdevs.comandar.data.entity;

import androidx.annotation.NonNull;
import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.ForeignKey;
import androidx.room.PrimaryKey;

import com.labdevs.comandar.data.entity.enums.EstadoMesa;

@Entity(tableName = "mesas",
        foreignKeys = @ForeignKey(entity = Camarero.class,
                parentColumns = "camarero_id",
                childColumns = "camarero_id",
                onDelete = ForeignKey.SET_NULL)) // Si se borra un camarero, la mesa queda sin asignar
public class Mesa {
    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(name = "mesa_id")
    public int mesaId;

    @ColumnInfo(name = "numero_mesa")
    public int numeroMesa;

    public int capacidad;

    @NonNull
    public EstadoMesa estado;

    @ColumnInfo(name = "posicion_mapa")
    public String posicionMapa;

    @ColumnInfo(name = "camarero_id", index = true)
    public Integer camareroId; // Usamos Integer para permitir nulos

    public Mesa() {
        this.capacidad = 4;
        this.estado = EstadoMesa.libre;
    }
}


===== src/main/java/com/labdevs/comandar/data/entity/Pedido.java =====
package com.labdevs.comandar.data.entity;

import androidx.annotation.NonNull;
import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.ForeignKey;
import androidx.room.PrimaryKey;

import com.labdevs.comandar.data.entity.enums.EstadoPedido;

import java.util.Date;

@Entity(tableName = "pedidos",
        foreignKeys = {
                @ForeignKey(entity = Mesa.class,
                        parentColumns = "mesa_id",
                        childColumns = "mesa_id",
                        onDelete = ForeignKey.CASCADE), // Si se borra una mesa, se borra su pedido
                @ForeignKey(entity = Camarero.class,
                        parentColumns = "camarero_id",
                        childColumns = "camarero_id",
                        onDelete = ForeignKey.RESTRICT) // No se puede borrar un camarero si tiene pedidos
        })
public class Pedido {
    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(name = "pedido_id")
    public int pedidoId;

    @ColumnInfo(name = "mesa_id", index = true)
    public int mesaId;

    @ColumnInfo(name = "camarero_id", index = true)
    public int camareroId;

    @NonNull
    @ColumnInfo(name = "fecha_hora_creacion")
    public Date fechaHoraCreacion;

    @NonNull
    public EstadoPedido estado;

    @ColumnInfo(name = "notas_generales")
    public String notasGenerales;

    public Pedido() {
        this.fechaHoraCreacion = new Date();
        this.estado = EstadoPedido.abierto;
    }
}


===== src/main/java/com/labdevs/comandar/data/entity/Producto.java =====
package com.labdevs.comandar.data.entity;

import androidx.annotation.NonNull;
import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.ForeignKey;
import androidx.room.PrimaryKey;

@Entity(tableName = "productos",
        foreignKeys = @ForeignKey(entity = CategoriaProducto.class,
                parentColumns = "categoria_id",
                childColumns = "categoria_id",
                onDelete = ForeignKey.RESTRICT))
public class Producto {
    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(name = "producto_id")
    public int productoId;

    @NonNull
    public String nombre;

    public String descripcion;

    public double precio;

    public boolean disponible;

    @ColumnInfo(name = "categoria_id", index = true)
    public int categoriaId;

    public Producto() {
        this.disponible = true;
    }
}


===== src/main/java/com/labdevs/comandar/data/model/ItemPedido.java =====
package com.labdevs.comandar.data.model;

import androidx.room.ColumnInfo;

// Esta clase no es una tabla (@Entity), es un contenedor para el resultado
// de una consulta con JOIN.
public class ItemPedido {
    @ColumnInfo(name = "producto_id")
    public int productoId;

    @ColumnInfo(name = "nombre")
    public String nombreProducto;

    public int cantidad;

    @ColumnInfo(name = "precio_unitario")
    public double precioUnitario;

    @ColumnInfo(name = "caracteristicas_particulares")
    public String caracteristicasParticulares;

    public double getSubtotal() {
        return cantidad * precioUnitario;
    }
}

===== src/main/java/com/labdevs/comandar/data/repository/AppRepository.java =====
package com.labdevs.comandar.data.repository;

import android.app.Application;

import androidx.lifecycle.LiveData;

import com.labdevs.comandar.data.dao.CamareroDao;
import com.labdevs.comandar.data.dao.CategoriaProductoDao;
import com.labdevs.comandar.data.dao.DetallePedidoDao;
import com.labdevs.comandar.data.dao.MesaDao;
import com.labdevs.comandar.data.dao.PedidoDao;
import com.labdevs.comandar.data.dao.ProductoDao;
import com.labdevs.comandar.data.database.AppDatabase;
import com.labdevs.comandar.data.entity.Camarero;
import com.labdevs.comandar.data.entity.CategoriaProducto;
import com.labdevs.comandar.data.entity.DetallePedido;
import com.labdevs.comandar.data.entity.Mesa;
import com.labdevs.comandar.data.entity.Pedido;
import com.labdevs.comandar.data.entity.Producto;
import com.labdevs.comandar.data.model.ItemPedido;

import java.util.List;

// data/repository/AppRepository.java
public class AppRepository {

    private final CamareroDao camareroDao;
    private final MesaDao mesaDao;
    private final PedidoDao pedidoDao;
    private final CategoriaProductoDao categoriaProductoDao;
    private final ProductoDao productoDao;
    private final DetallePedidoDao detallePedidoDao;

    // LiveData que pueden ser observados globalmente
    private final LiveData<List<Mesa>> allMesas;

    public AppRepository(Application application) {
        AppDatabase db = AppDatabase.getDatabase(application);
        camareroDao = db.camareroDao();
        mesaDao = db.mesaDao();
        pedidoDao = db.pedidoDao();
        categoriaProductoDao = db.categoriaProductoDao();
        productoDao = db.productoDao();
        detallePedidoDao = db.detallePedidoDao();

        allMesas = mesaDao.getAllMesas();
    }

    // --- GESTIÓN DE PERFIL ---
    public void registrarCamarero(Camarero camarero) {
        AppDatabase.databaseWriteExecutor.execute(() -> camareroDao.insert(camarero));
    }

    public void actualizarPerfilCamarero(Camarero camarero) {
        AppDatabase.databaseWriteExecutor.execute(() -> camareroDao.update(camarero));
    }

    public Camarero iniciarSesion(String email) {
        // Esta es una operación de lectura, pero como no es LiveData,
        // la ejecutamos en un Callable para obtener el resultado de forma síncrona pero segura.
        // NOTA: En un ViewModel real, esto se manejaría de forma más asíncrona.
        try {
            return AppDatabase.databaseWriteExecutor.submit(() -> camareroDao.getCamareroByEmail(email)).get();
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    public LiveData<Camarero> getPerfil(int id) {
        return camareroDao.getCamareroById(id);
    }

    // --- GESTIÓN DE MESAS ---
    public LiveData<List<Mesa>> getMapaDeMesas() {
        return allMesas;
    }

    public void asignarMesa(Mesa mesa, int camareroId) {
        mesa.camareroId = camareroId;
        AppDatabase.databaseWriteExecutor.execute(() -> mesaDao.update(mesa));
    }

    public void desasignarMesa(Mesa mesa) {
        mesa.camareroId = null;
        AppDatabase.databaseWriteExecutor.execute(() -> mesaDao.update(mesa));
    }

    // --- GESTIÓN DE PEDIDOS Y MENÚ ---
    public LiveData<List<CategoriaProducto>> getCategoriasMenu() {
        return categoriaProductoDao.getAllCategorias();
    }

    public LiveData<List<Producto>> getProductosPorCategoria(int categoriaId) {
        return productoDao.getProductosByCategoria(categoriaId);
    }

    public LiveData<Pedido> getPedidoActivoDeMesa(int mesaId) {
        return pedidoDao.getPedidoActivoPorMesa(mesaId);
    }

    public void crearNuevoPedido(Pedido pedido) {
        AppDatabase.databaseWriteExecutor.execute(() -> pedidoDao.insert(pedido));
    }

    public void agregarItemAlPedido(DetallePedido detalle) {
        AppDatabase.databaseWriteExecutor.execute(() -> detallePedidoDao.insertOrUpdate(detalle));
    }

    public void eliminarItemDelPedido(DetallePedido detalle) {
        AppDatabase.databaseWriteExecutor.execute(() -> detallePedidoDao.delete(detalle));
    }

    public LiveData<List<ItemPedido>> getItemsDelPedido(int pedidoId) {
        return detallePedidoDao.getItemsPedidoConNombre(pedidoId);
    }

    public void actualizarEstadoPedido(Pedido pedido) {
        AppDatabase.databaseWriteExecutor.execute(() -> pedidoDao.update(pedido));
    }

    // --- Métodos para popular datos iniciales---
    public void poblarCategoriasYProductos(List<CategoriaProducto> categorias, List<Producto> productos) {
        AppDatabase.databaseWriteExecutor.execute(() -> {
            categoriaProductoDao.insertAll(categorias);
            productoDao.insertAll(productos);
        });
    }
}


===== src/main/java/com/labdevs/comandar/DetailProductActivity.java =====
package com.labdevs.comandar;

import android.os.Bundle;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

public class DetailProductActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_detail_product);
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });
    }
}

===== src/main/java/com/labdevs/comandar/LoginActivity.java =====
package com.labdevs.comandar;

import android.os.Bundle;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

public class LoginActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_login);
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });
    }
}

===== src/main/java/com/labdevs/comandar/MainActivity.java =====
package com.labdevs.comandar;

import android.os.Bundle;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_main);
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });
    }
}

===== src/main/java/com/labdevs/comandar/ProfileActivity.java =====
package com.labdevs.comandar;

import android.os.Bundle;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

public class ProfileActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_profile);
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });
    }
}

===== src/main/java/com/labdevs/comandar/RegisterActivity.java =====
package com.labdevs.comandar;

import android.os.Bundle;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

public class RegisterActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_register);
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });
    }
}

===== src/main/java/com/labdevs/comandar/ResumeActivity.java =====
package com.labdevs.comandar;

import android.os.Bundle;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

public class ResumeActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_resume);
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });
    }
}

===== src/main/java/com/labdevs/comandar/TablesActivity.java =====
package com.labdevs.comandar;

import android.os.Bundle;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

public class TablesActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_tables);
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });
    }
}

===== src/main/res/drawable/account_circle_24px.xml =====
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="960"
    android:viewportHeight="960"
    android:tint="?attr/colorControlNormal">
  <path
      android:fillColor="@android:color/white"
      android:pathData="M234,684Q285,645 348,622.5Q411,600 480,600Q549,600 612,622.5Q675,645 726,684Q761,643 780.5,591Q800,539 800,480Q800,347 706.5,253.5Q613,160 480,160Q347,160 253.5,253.5Q160,347 160,480Q160,539 179.5,591Q199,643 234,684ZM480,520Q421,520 380.5,479.5Q340,439 340,380Q340,321 380.5,280.5Q421,240 480,240Q539,240 579.5,280.5Q620,321 620,380Q620,439 579.5,479.5Q539,520 480,520ZM480,880Q397,880 324,848.5Q251,817 197,763Q143,709 111.5,636Q80,563 80,480Q80,397 111.5,324Q143,251 197,197Q251,143 324,111.5Q397,80 480,80Q563,80 636,111.5Q709,143 763,197Q817,251 848.5,324Q880,397 880,480Q880,563 848.5,636Q817,709 763,763Q709,817 636,848.5Q563,880 480,880ZM480,800Q533,800 580,784.5Q627,769 666,740Q627,711 580,695.5Q533,680 480,680Q427,680 380,695.5Q333,711 294,740Q333,769 380,784.5Q427,800 480,800ZM480,440Q506,440 523,423Q540,406 540,380Q540,354 523,337Q506,320 480,320Q454,320 437,337Q420,354 420,380Q420,406 437,423Q454,440 480,440ZM480,380Q480,380 480,380Q480,380 480,380Q480,380 480,380Q480,380 480,380Q480,380 480,380Q480,380 480,380Q480,380 480,380Q480,380 480,380ZM480,740Q480,740 480,740Q480,740 480,740Q480,740 480,740Q480,740 480,740Q480,740 480,740Q480,740 480,740Q480,740 480,740Q480,740 480,740Z"/>
</vector>


===== src/main/res/drawable/arrow_back_24px.xml =====
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="960"
    android:viewportHeight="960"
    android:tint="?attr/colorControlNormal"
    android:autoMirrored="true">
  <path
      android:fillColor="@android:color/white"
      android:pathData="M313,520L537,744L480,800L160,480L480,160L537,216L313,440L800,440L800,520L313,520Z"/>
</vector>


===== src/main/res/drawable/arrow_forward_ios_24px.xml =====
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="960"
    android:viewportHeight="960"
    android:tint="?attr/colorControlNormal"
    android:autoMirrored="true">
  <path
      android:fillColor="@android:color/white"
      android:pathData="M321,880L250,809L579,480L250,151L321,80L721,480L321,880Z"/>
</vector>


===== src/main/res/drawable/dehaze_24px.xml =====
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="960"
    android:viewportHeight="960"
    android:tint="?attr/colorControlNormal">
  <path
      android:fillColor="@android:color/white"
      android:pathData="M120,280L120,200L840,200L840,280L120,280ZM120,760L120,680L840,680L840,760L120,760ZM120,520L120,440L840,440L840,520L120,520Z"/>
</vector>


===== src/main/res/drawable/ic_launcher_background.xml =====
<?xml version="1.0" encoding="utf-8"?>
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="108dp"
    android:height="108dp"
    android:viewportWidth="108"
    android:viewportHeight="108">
    <path
        android:fillColor="#3DDC84"
        android:pathData="M0,0h108v108h-108z" />
    <path
        android:fillColor="#00000000"
        android:pathData="M9,0L9,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,0L19,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M29,0L29,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M39,0L39,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M49,0L49,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M59,0L59,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M69,0L69,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M79,0L79,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M89,0L89,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M99,0L99,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,9L108,9"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,19L108,19"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,29L108,29"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,39L108,39"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,49L108,49"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,59L108,59"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,69L108,69"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,79L108,79"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,89L108,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,99L108,99"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,29L89,29"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,39L89,39"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,49L89,49"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,59L89,59"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,69L89,69"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,79L89,79"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M29,19L29,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M39,19L39,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M49,19L49,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M59,19L59,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M69,19L69,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M79,19L79,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
</vector>


===== src/main/res/drawable/ic_launcher_foreground.xml =====
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:aapt="http://schemas.android.com/aapt"
    android:width="108dp"
    android:height="108dp"
    android:viewportWidth="108"
    android:viewportHeight="108">
    <path android:pathData="M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z">
        <aapt:attr name="android:fillColor">
            <gradient
                android:endX="85.84757"
                android:endY="92.4963"
                android:startX="42.9492"
                android:startY="49.59793"
                android:type="linear">
                <item
                    android:color="#44000000"
                    android:offset="0.0" />
                <item
                    android:color="#00000000"
                    android:offset="1.0" />
            </gradient>
        </aapt:attr>
    </path>
    <path
        android:fillColor="#FFFFFF"
        android:fillType="nonZero"
        android:pathData="M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z"
        android:strokeWidth="1"
        android:strokeColor="#00000000" />
</vector>

===== src/main/res/drawable/panorama_24px.xml =====
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="960"
    android:viewportHeight="960"
    android:tint="?attr/colorControlNormal">
  <path
      android:fillColor="@android:color/white"
      android:pathData="M160,800Q127,800 103.5,776.5Q80,753 80,720L80,240Q80,207 103.5,183.5Q127,160 160,160L800,160Q833,160 856.5,183.5Q880,207 880,240L880,720Q880,753 856.5,776.5Q833,800 800,800L160,800ZM160,720L800,720Q800,720 800,720Q800,720 800,720L800,240Q800,240 800,240Q800,240 800,240L160,240Q160,240 160,240Q160,240 160,240L160,720Q160,720 160,720Q160,720 160,720ZM240,640L720,640L570,440L450,600L360,480L240,640ZM160,720Q160,720 160,720Q160,720 160,720L160,240Q160,240 160,240Q160,240 160,240L160,240Q160,240 160,240Q160,240 160,240L160,720Q160,720 160,720Q160,720 160,720Z"/>
</vector>


===== src/main/res/drawable/settings_24px.xml =====
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="960"
    android:viewportHeight="960"
    android:tint="?attr/colorControlNormal">
  <path
      android:fillColor="@android:color/white"
      android:pathData="M370,880L354,752Q341,747 329.5,740Q318,733 307,725L188,775L78,585L181,507Q180,500 180,493.5Q180,487 180,480Q180,473 180,466.5Q180,460 181,453L78,375L188,185L307,235Q318,227 330,220Q342,213 354,208L370,80L590,80L606,208Q619,213 630.5,220Q642,227 653,235L772,185L882,375L779,453Q780,460 780,466.5Q780,473 780,480Q780,487 780,493.5Q780,500 778,507L881,585L771,775L653,725Q642,733 630,740Q618,747 606,752L590,880L370,880ZM440,800L519,800L533,694Q564,686 590.5,670.5Q617,655 639,633L738,674L777,606L691,541Q696,527 698,511.5Q700,496 700,480Q700,464 698,448.5Q696,433 691,419L777,354L738,286L639,328Q617,305 590.5,289.5Q564,274 533,266L520,160L441,160L427,266Q396,274 369.5,289.5Q343,305 321,327L222,286L183,354L269,418Q264,433 262,448Q260,463 260,480Q260,496 262,511Q264,526 269,541L183,606L222,674L321,632Q343,655 369.5,670.5Q396,686 427,694L440,800ZM482,620Q540,620 581,579Q622,538 622,480Q622,422 581,381Q540,340 482,340Q423,340 382.5,381Q342,422 342,480Q342,538 382.5,579Q423,620 482,620ZM480,480L480,480Q480,480 480,480Q480,480 480,480L480,480L480,480L480,480Q480,480 480,480Q480,480 480,480Q480,480 480,480Q480,480 480,480L480,480L480,480L480,480Q480,480 480,480Q480,480 480,480L480,480L480,480L480,480Q480,480 480,480Q480,480 480,480L480,480L480,480L480,480Q480,480 480,480Q480,480 480,480Q480,480 480,480Q480,480 480,480L480,480L480,480L480,480Q480,480 480,480Q480,480 480,480L480,480Z"/>
</vector>


===== src/main/res/layout/activity_detail_product.xml =====
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".DetailProductActivity">

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="72dp"
                android:paddingHorizontal="16dp"
                android:orientation="horizontal"
                android:gravity="center">

                <ImageView
                    android:id="@+id/icon_back"
                    android:layout_width="24dp"
                    android:layout_height="24dp"
                    app:srcCompat="@drawable/arrow_back_24px"/>

                <TextView
                    android:id="@+id/detail_product_title"
                    android:layout_width="fill_parent"
                    android:layout_height="wrap_content"
                    android:text="@string/title_product_detail"
                    android:textSize="18sp"
                    android:textStyle="bold"
                    android:textAlignment="center"
                    android:layout_marginRight="20dp"/>
            </LinearLayout>

            <ImageView
                android:id="@+id/image_product"
                android:layout_width="match_parent"
                android:layout_height="230dp"
                android:background="@color/grey"
                app:srcCompat="@drawable/panorama_24px" />

            <TextView
                android:id="@+id/product_name"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:paddingHorizontal="16dp"
                android:paddingTop="20dp"
                android:paddingBottom="12dp"
                android:text="@string/example_product_name"
                android:textSize="22sp"
                android:textStyle="bold"/>

            <TextView
                android:id="@+id/product_category"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:paddingHorizontal="16dp"
                android:paddingTop="4dp"
                android:paddingBottom="12dp"
                android:text="@string/example_product_category"
                android:textSize="14sp"/>

            <TextView
                android:id="@+id/product_description"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:paddingHorizontal="16dp"
                android:paddingTop="4dp"
                android:paddingBottom="12dp"
                android:text="@string/example_product_description"
                android:textSize="16sp"/>

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:paddingHorizontal="16dp"
                android:paddingVertical="12dp"
                android:orientation="vertical">

                <TextView
                    android:id="@+id/notes_section_subtitle"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:paddingBottom="8dp"
                    android:text="@string/notes_subtitle"
                    android:textSize="16sp"
                    android:textStyle="bold"/>

                <EditText
                    android:id="@+id/aditional_notes"
                    android:layout_width="match_parent"
                    android:layout_height="150dp"
                    android:ems="10"
                    android:gravity="start|top"
                    android:background="@color/grey"
                    android:inputType="textMultiLine" />
            </LinearLayout>

            <TextView
                android:id="@+id/product_price"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:paddingHorizontal="16dp"
                android:paddingTop="4dp"
                android:paddingBottom="12dp"
                android:text="@string/example_product_price"
                android:textSize="14sp"/>

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="64dp"
                android:paddingHorizontal="16dp"
                android:paddingVertical="12dp"
                android:orientation="horizontal">

                <Button
                    android:id="@+id/decrease_count"
                    android:layout_width="0dp"
                    android:layout_weight="1"
                    android:layout_height="match_parent"
                    app:cornerRadius="5dp"
                    android:textStyle="bold"
                    android:textSize="14sp"
                    android:textColor="@color/black"
                    android:backgroundTint="@color/white"
                    android:text="@string/decrease_button" />

                <Button
                    android:id="@+id/actual_count"
                    android:layout_width="0dp"
                    android:layout_weight="1"
                    android:layout_height="match_parent"
                    android:layout_marginHorizontal="12dp"
                    app:cornerRadius="5dp"
                    android:textStyle="bold"
                    android:textSize="14sp"
                    android:text="@string/example_product_count" />

                <Button
                    android:id="@+id/increase_count"
                    android:layout_width="0dp"
                    android:layout_weight="1"
                    android:layout_height="match_parent"
                    app:cornerRadius="5dp"
                    android:textStyle="bold"
                    android:textSize="14sp"
                    android:textColor="@color/black"
                    android:backgroundTint="@color/white"
                    android:text="@string/increase_button" />
            </LinearLayout>

            <Button
                android:id="@+id/add_product_button"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginHorizontal="16dp"
                android:layout_marginVertical="12dp"
                app:cornerRadius="5dp"
                android:text="@string/add_button" />

        </LinearLayout>
    </ScrollView>
</LinearLayout>

===== src/main/res/layout/activity_login.xml =====
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:paddingHorizontal="16dp"
    tools:context=".LoginActivity">

    <TextView
        android:id="@+id/login_title"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="28sp"
        android:textStyle="bold"
        android:textAlignment="center"
        android:layout_marginTop="20dp"
        android:layout_marginBottom="12dp"
        android:text="@string/title_login" />

    <EditText
        android:id="@+id/input_email"
        android:layout_width="match_parent"
        android:layout_height="56dp"
        android:layout_marginBottom="12dp"
        android:layout_marginTop="12dp"
        android:paddingHorizontal="12dp"
        android:focusable="true"
        android:clickable="true"
        android:ems="10"
        android:inputType="textEmailAddress"
        android:hint="@string/email_input"/>

    <EditText
        android:id="@+id/input_password"
        android:layout_width="match_parent"
        android:layout_height="56dp"
        android:layout_marginTop="12dp"
        android:layout_marginBottom="12dp"
        android:paddingHorizontal="12dp"
        app:passwordToggleEnabled="true"
        android:ems="10"
        android:inputType="textPassword"
        android:hint="@string/password_input"/>

    <TextView
        android:id="@+id/forgot_password_link"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:clickable="true"
        android:focusable="true"
        android:text="@string/forgot_link"
        android:textAlignment="center"/>

    <Button
        android:id="@+id/button_login"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="@string/login_button"
        app:cornerRadius="5dp" />

    <TextView
        android:id="@+id/register_account_link"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:clickable="true"
        android:focusable="true"
        android:text="@string/register_link"
        android:textAlignment="center"/>
</LinearLayout>


===== src/main/res/layout/activity_main.xml =====
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Hello World!"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>

===== src/main/res/layout/activity_profile.xml =====
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".ProfileActivity">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="50dp"
        android:orientation="horizontal"
        android:gravity="center"
        android:layout_marginBottom="8dp">

        <TextView
            android:id="@+id/profile_title"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:text="@string/title_profile"
            android:textSize="18sp"
            android:textStyle="bold"
            android:textAlignment="center"
            android:layout_marginLeft="55dp"/>

        <ImageView
            android:id="@+id/icon_settings"
            android:layout_width="24dp"
            android:layout_height="24dp"
            app:srcCompat="@drawable/settings_24px"
            android:layout_marginRight="35dp"/>
    </LinearLayout>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:padding="16dp">

        <ImageView
            android:id="@+id/profile_photo"
            android:layout_width="128dp"
            android:layout_height="128dp"
            android:layout_gravity="center"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:srcCompat="@drawable/account_circle_24px" />

        <TextView
            android:id="@+id/name_user"
            android:layout_width="wrap_content"
            android:layout_height="28dp"
            android:layout_gravity="center"
            android:layout_marginTop="16dp"
            android:text="@string/example_name"
            android:textAlignment="center"
            android:textSize="22sp"
            android:textStyle="bold"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/profile_photo" />

        <TextView
            android:id="@+id/job_user"
            android:layout_width="wrap_content"
            android:layout_height="24dp"
            android:layout_gravity="center"
            android:layout_marginTop="16dp"
            android:text="@string/example_job"
            android:textSize="16sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/name_user" />

        <TextView
            android:id="@+id/email_user"
            android:layout_width="wrap_content"
            android:layout_height="24dp"
            android:layout_gravity="center"
            android:layout_marginTop="16dp"
            android:text="@string/example_email"
            android:textSize="16sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/job_user" />

    </androidx.constraintlayout.widget.ConstraintLayout>

    <TextView
        android:id="@+id/info_section_title"
        android:layout_width="match_parent"
        android:layout_height="47dp"
        android:paddingHorizontal="16dp"
        android:paddingTop="16dp"
        android:paddingBottom="8dp"
        android:text="@string/infosec_title"
        android:textStyle="bold"
        android:textSize="18sp"/>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="56dp"
        android:paddingHorizontal="16dp">

        <TextView
            android:id="@+id/designed_tables_subtitle"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/tables_subtitle"
            android:textSize="16sp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <TextView
            android:id="@+id/tables_count"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/example_table_numbers"
            android:textSize="16sp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

    </androidx.constraintlayout.widget.ConstraintLayout>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="56dp"
        android:paddingHorizontal="16dp">

        <TextView
            android:id="@+id/contact_subtitle"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/contact_subtitle"
            android:textSize="16sp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <TextView
            android:id="@+id/contact_phone"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/example_contact_phone"
            android:textSize="16sp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

    </androidx.constraintlayout.widget.ConstraintLayout>

    <TextView
        android:id="@+id/account_section_title"
        android:layout_width="match_parent"
        android:layout_height="47dp"
        android:paddingHorizontal="16dp"
        android:paddingTop="16dp"
        android:paddingBottom="8dp"
        android:text="@string/accountsec_title"
        android:textStyle="bold"
        android:textSize="18sp"/>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="56dp"
        android:paddingHorizontal="16dp">

        <TextView
            android:id="@+id/edit_profile_subtitle"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/edit_profile_subtitle"
            android:textSize="16sp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <ImageView
            android:id="@+id/icon_next"
            android:layout_width="20dp"
            android:layout_height="20dp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:srcCompat="@drawable/arrow_forward_ios_24px" />

    </androidx.constraintlayout.widget.ConstraintLayout>

    <Button
        android:id="@+id/button_logout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginHorizontal="16dp"
        android:layout_marginTop="41dp"
        android:layout_marginBottom="12dp"
        app:cornerRadius="5dp"
        android:text="@string/logout_button" />
</LinearLayout>


===== src/main/res/layout/activity_register.xml =====
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:paddingHorizontal="16dp"
    tools:context=".RegisterActivity">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="72dp"
        android:orientation="horizontal"
        android:gravity="center">

        <ImageView
            android:id="@+id/icon_back"
            android:layout_width="24dp"
            android:layout_height="24dp"
            app:srcCompat="@drawable/arrow_back_24px"/>

        <TextView
            android:id="@+id/register_title"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:text="@string/title_register"
            android:textSize="18sp"
            android:textStyle="bold"
            android:textAlignment="center"
            android:layout_marginRight="20dp"/>

    </LinearLayout>

    <EditText
        android:id="@+id/input_register_name"
        android:layout_width="match_parent"
        android:layout_height="56dp"
        android:layout_marginBottom="12dp"
        android:layout_marginTop="12dp"
        android:paddingHorizontal="12dp"
        android:focusable="true"
        android:clickable="true"
        android:ems="10"
        android:inputType="textPersonName"
        android:hint="@string/name_input"/>

    <EditText
        android:id="@+id/input_register_lastname"
        android:layout_width="match_parent"
        android:layout_height="56dp"
        android:layout_marginTop="12dp"
        android:layout_marginBottom="12dp"
        android:paddingHorizontal="12dp"
        android:ems="10"
        android:inputType="textPersonName"
        android:hint="@string/lastname_input"/>

    <EditText
        android:id="@+id/input_register_email"
        android:layout_width="match_parent"
        android:layout_height="56dp"
        android:layout_marginBottom="12dp"
        android:layout_marginTop="12dp"
        android:paddingHorizontal="12dp"
        android:focusable="true"
        android:clickable="true"
        android:ems="10"
        android:inputType="textEmailAddress"
        android:hint="@string/email_input"/>

    <EditText
        android:id="@+id/input_register_password"
        android:layout_width="match_parent"
        android:layout_height="56dp"
        android:layout_marginTop="12dp"
        android:layout_marginBottom="12dp"
        android:paddingHorizontal="12dp"
        app:passwordToggleEnabled="true"
        android:ems="10"
        android:inputType="textPassword"
        android:hint="@string/password_input"/>

    <EditText
        android:id="@+id/input_register_phone"
        android:layout_width="match_parent"
        android:layout_height="56dp"
        android:layout_marginBottom="12dp"
        android:layout_marginTop="12dp"
        android:paddingHorizontal="12dp"
        android:focusable="true"
        android:clickable="true"
        android:ems="10"
        android:inputType="phone"
        android:hint="@string/phone_input"/>

    <EditText
        android:id="@+id/input_register_photo"
        android:layout_width="match_parent"
        android:layout_height="56dp"
        android:layout_marginTop="12dp"
        android:layout_marginBottom="12dp"
        android:paddingHorizontal="12dp"
        android:ems="10"
        android:hint="@string/photo_input"/>

    <Button
        android:id="@+id/button_register"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="@string/register_button"
        app:cornerRadius="5dp"
        android:layout_marginTop="12dp"
        android:layout_marginBottom="12dp"/>
</LinearLayout>


===== src/main/res/layout/activity_resume.xml =====
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".ResumeActivity">

    <LinearLayout
        android:id="@+id/linearLayout"
        android:layout_width="match_parent"
        android:layout_height="72dp"
        android:gravity="center"
        android:orientation="horizontal"
        android:paddingHorizontal="16dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent">

        <ImageView
            android:id="@+id/icon_back"
            android:layout_width="24dp"
            android:layout_height="24dp"
            app:srcCompat="@drawable/arrow_back_24px" />

        <TextView
            android:id="@+id/resume_title"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:layout_marginRight="20dp"
            android:text="@string/title_resume"
            android:textAlignment="center"
            android:textSize="18sp"
            android:textStyle="bold" />

    </LinearLayout>

    <TextView
        android:id="@+id/table_number"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingHorizontal="16dp"
        android:paddingTop="16dp"
        android:paddingBottom="8dp"
        android:text="@string/example_table_number"
        android:textSize="18sp"
        android:textStyle="bold"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/linearLayout" />

    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/list_products_order"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/table_number" />

    <TextView
        android:id="@+id/details_section_title"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingHorizontal="16dp"
        android:paddingTop="16dp"
        android:paddingBottom="8dp"
        android:text="@string/detailsec_title"
        android:textSize="18sp"
        android:textStyle="bold"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/list_products_order" />

    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/constraint_layout1"
        android:layout_width="match_parent"
        android:layout_height="143dp"
        android:padding="16dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/details_section_title">

        <TextView
            android:id="@+id/subtotal_subtitle"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/subtotal_subtitle"
            android:textSize="16sp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <TextView
            android:id="@+id/subtotal"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginEnd="8dp"
            android:text="@string/example_subtotal"
            android:textSize="16sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <TextView
            android:id="@+id/taxes_subtitle"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:text="@string/taxes_subtitle"
            android:textSize="16sp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/subtotal_subtitle" />

        <TextView
            android:id="@+id/taxes"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:layout_marginEnd="8dp"
            android:text="@string/example_taxes"
            android:textSize="16sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/subtotal" />

        <TextView
            android:id="@+id/total_subtitle"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/total_subtitle"
            android:textSize="16sp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/taxes_subtitle"
            app:layout_constraintVertical_bias="1.0" />

        <TextView
            android:id="@+id/total"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginEnd="8dp"
            android:text="@string/example_total"
            android:textSize="16sp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/taxes"
            app:layout_constraintVertical_bias="1.0" />

    </androidx.constraintlayout.widget.ConstraintLayout>

    <TextView
        android:id="@+id/pay_option_section_title"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingHorizontal="16dp"
        android:paddingTop="16dp"
        android:paddingBottom="8dp"
        android:text="@string/paysec_title"
        android:textSize="18sp"
        android:textStyle="bold"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/constraint_layout1" />

    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/constraint_layout2"
        android:layout_width="match_parent"
        android:layout_height="56dp"
        android:paddingHorizontal="16dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/pay_option_section_title">

        <TextView
            android:id="@+id/total_pay_subtitle"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/cobro_subtitle"
            android:textSize="16sp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <CheckBox
            android:id="@+id/checkBox_total_pay"
            android:layout_width="20dp"
            android:layout_height="20dp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toTopOf="parent"/>

    </androidx.constraintlayout.widget.ConstraintLayout>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/constraint_layout3"
        android:layout_width="match_parent"
        android:layout_height="56dp"
        android:paddingHorizontal="16dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/constraint_layout2">

        <TextView
            android:id="@+id/divide_pay_subtitle"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/divide_subtitle"
            android:textSize="16sp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <Switch
            android:id="@+id/switch_divide_pay"
            android:layout_width="wrap_content"
            android:layout_height="20dp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toTopOf="parent"/>

    </androidx.constraintlayout.widget.ConstraintLayout>

    <Button
        android:id="@+id/button_pay_confirm"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginHorizontal="16dp"
        android:text="@string/pay_confirm_button"
        app:cornerRadius="5dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/constraint_layout3" />


</androidx.constraintlayout.widget.ConstraintLayout>

===== src/main/res/layout/activity_tables.xml =====
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".TablesActivity">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="50dp"
        android:orientation="horizontal"
        android:gravity="center"
        android:layout_marginBottom="8dp">

        <TextView
            android:id="@+id/tables_title"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:text="@string/title_table"
            android:textSize="18sp"
            android:textStyle="bold"
            android:textAlignment="center"
            android:layout_marginLeft="55dp"/>

        <ImageView
            android:id="@+id/icon_settings"
            android:layout_width="24dp"
            android:layout_height="24dp"
            app:srcCompat="@drawable/dehaze_24px"
            android:layout_marginRight="35dp"/>
    </LinearLayout>

    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/list_tables"
        android:layout_width="match_parent"
        android:layout_height="match_parent" />

</LinearLayout>

===== src/main/res/layout/item_order_list.xml =====
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="72dp"
    android:paddingHorizontal="16dp"
    android:paddingVertical="8dp">

    <TextView
        android:id="@+id/product_name"
        android:layout_width="wrap_content"
        android:layout_height="24dp"
        android:layout_marginTop="8dp"
        android:text="@string/example_order_product_name"
        android:textSize="16sp"
        android:textStyle="bold"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <TextView
        android:id="@+id/product_count"
        android:layout_width="wrap_content"
        android:layout_height="21dp"
        android:text="@string/example_order_product_count"
        android:textSize="14sp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="@+id/product_name"
        app:layout_constraintTop_toBottomOf="@+id/product_name"
        app:layout_constraintVertical_bias="0.272" />

    <TextView
        android:id="@+id/product_subtotal"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/example_order_product_subtotal"
        android:textSize="16sp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>

===== src/main/res/layout/item_table_list.xml =====
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="150dp"
    android:padding="16dp">


    <TextView
        android:id="@+id/table_number"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/example_table_number"
        android:textSize="14sp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <TextView
        android:id="@+id/table_status"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="4dp"
        android:text="@string/example_status_table"
        android:textSize="18sp"
        android:textStyle="bold"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/table_number" />

    <TextView
        android:id="@+id/table_description"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="4dp"
        android:text="@string/example_status_table_description"
        android:textSize="14sp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/table_status" />

    <Button
        android:id="@+id/change_assign_button"
        android:layout_width="117dp"
        android:layout_height="42dp"
        android:paddingHorizontal="16dp"
        android:layout_marginTop="16dp"
        android:text="@string/unassign_button"
        app:cornerRadius="5dp"
        android:textSize="14sp"
        android:backgroundTint="@color/grey"
        android:textColor="@color/black"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/table_description" />

    <ImageView
        android:id="@+id/table_image"
        android:layout_width="130dp"
        android:layout_height="match_parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        android:background="@color/grey"
        app:srcCompat="@drawable/panorama_24px" />


</androidx.constraintlayout.widget.ConstraintLayout>

===== src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml =====
<?xml version="1.0" encoding="utf-8"?>
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
    <background android:drawable="@drawable/ic_launcher_background" />
    <foreground android:drawable="@drawable/ic_launcher_foreground" />
    <monochrome android:drawable="@drawable/ic_launcher_foreground" />
</adaptive-icon>

===== src/main/res/mipmap-anydpi-v26/ic_launcher.xml =====
<?xml version="1.0" encoding="utf-8"?>
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
    <background android:drawable="@drawable/ic_launcher_background" />
    <foreground android:drawable="@drawable/ic_launcher_foreground" />
    <monochrome android:drawable="@drawable/ic_launcher_foreground" />
</adaptive-icon>

===== src/main/res/values/colors.xml =====
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <color name="black">#FF000000</color>
    <color name="white">#FFFFFFFF</color>

    <color name="grey">#E7E7E7</color>
</resources>

===== src/main/res/values/strings.xml =====
<resources>
    <string name="app_name">ComandAR</string>

    <!--  LOGIN VIEW STRINGS  -->
    <string name="title_login">Iniciar sesión</string>
    <string name="email_input">Correo electrónico</string>
    <string name="password_input">Contraseña</string>
    <string name="forgot_link">¿Olvidaste tu contraseña?</string>
    <string name="login_button">Iniciar sesión</string>
    <string name="register_link">¿No tienes una cuenta? Registrate</string>

    <!--  REGISTER VIEW STRINGS  -->
    <string name="title_register">Crear cuenta</string>
    <string name="name_input">Nombre/s</string>
    <string name="lastname_input">Apellido/s</string>
    <string name="phone_input">Telefono o celular</string>
    <string name="photo_input">Seleccione una foto de perfil...</string>
    <string name="register_button">Crear cuenta</string>

    <!--  PROFILE VIEW STRINGS  -->
    <string name="title_profile">Perfil</string>
    <string name="infosec_title">Información</string>
    <string name="tables_subtitle">Mesas asignadas</string>
    <string name="contact_subtitle">Contacto</string>
    <string name="accountsec_title">Cuenta</string>
    <string name="edit_profile_subtitle">Editar perfil</string>
    <string name="logout_button">Cerrar sesión</string>

    <!--  RESUME ORDER VIEW STRINGS  -->
    <string name="title_resume">Resumen del Pedido</string>
    <string name="detailsec_title">Detalles del Pedido</string>
    <string name="subtotal_subtitle">Subtotal</string>
    <string name="taxes_subtitle">Impuestos (7%)</string>
    <string name="total_subtitle">Total</string>
    <string name="paysec_title">Opciones de pago</string>
    <string name="cobro_subtitle">Cobro total</string>
    <string name="divide_subtitle">Dividir por personas</string>
    <string name="pay_confirm_button">Confirmar pago</string>

    <!--  PRODUCT DETAIL VIEW STRINGS  -->
    <string name="title_product_detail">Detalle de Producto</string>
    <string name="notes_subtitle">Notas personalizadas</string>
    <string name="increase_button">+</string>
    <string name="decrease_button">-</string>
    <string name="add_button">Agregar al Pedido</string>

    <!--  TABLES VIEW STRINGS  -->
    <string name="title_table">Mesas</string>

    <!--  ITEM TABLE LIST STRINGS  -->
    <string name="assign_button">Asignar</string>
    <string name="unassign_button">Desasignar</string>

    <!--  EXAMPLE VALUE STRINGS  -->
    <string name="example_name">Carlos</string>
    <string name="example_job">Camarero</string>
    <string name="example_email">carlos@restaurante.com</string>
    <string name="example_table_numbers">3</string>
    <string name="example_contact_phone">+34 666 777 888</string>
    <string name="example_table_number">Mesa 7</string>
    <string name="example_subtotal">$35.00</string>
    <string name="example_taxes">$2.45</string>
    <string name="example_total">$37.45</string>
    <string name="example_product_name">Taco de Carnitas</string>
    <string name="example_product_category">Tacos</string>
    <string name="example_product_description">Taco de carnitas con cebolla, cilantro y salsa roja. Servido con limones y rabanitos.</string>
    <string name="example_product_price">$3.50</string>
    <string name="example_product_count">1</string>
    <string name="example_status_table_description">En servicio por camarero</string>
    <string name="example_status_table">Estado: Ocupada</string>
    <string name="example_order_product_name">Cerveza Artesanal IPA</string>
    <string name="example_order_product_count">Cantidad: 2</string>
    <string name="example_order_product_subtotal">$12.00</string>
</resources>

===== src/main/res/values/themes.xml =====
<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Base.Theme.Comandar" parent="Theme.Material3.DayNight.NoActionBar">
        <!-- Customize your light theme here. -->
        <!-- <item name="colorPrimary">@color/my_light_primary</item> -->
    </style>

    <style name="Theme.Comandar" parent="Base.Theme.Comandar" />
</resources>

===== src/main/res/values-night/themes.xml =====
<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Base.Theme.Comandar" parent="Theme.Material3.DayNight.NoActionBar">
        <!-- Customize your dark theme here. -->
        <!-- <item name="colorPrimary">@color/my_dark_primary</item> -->
    </style>
</resources>

===== src/main/res/xml/backup_rules.xml =====
<?xml version="1.0" encoding="utf-8"?><!--
   Sample backup rules file; uncomment and customize as necessary.
   See https://developer.android.com/guide/topics/data/autobackup
   for details.
   Note: This file is ignored for devices older than API 31
   See https://developer.android.com/about/versions/12/backup-restore
-->
<full-backup-content>
    <!--
   <include domain="sharedpref" path="."/>
   <exclude domain="sharedpref" path="device.xml"/>
-->
</full-backup-content>

===== src/main/res/xml/data_extraction_rules.xml =====
<?xml version="1.0" encoding="utf-8"?><!--
   Sample data extraction rules file; uncomment and customize as necessary.
   See https://developer.android.com/about/versions/12/backup-restore#xml-changes
   for details.
-->
<data-extraction-rules>
    <cloud-backup>
        <!-- TODO: Use <include> and <exclude> to control what is backed up.
        <include .../>
        <exclude .../>
        -->
    </cloud-backup>
    <!--
    <device-transfer>
        <include .../>
        <exclude .../>
    </device-transfer>
    -->
</data-extraction-rules>

===== src/main/AndroidManifest.xml =====
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.Comandar">
        <activity
            android:name=".DetailProductActivity"
            android:exported="false" />
        <activity
            android:name=".ResumeActivity"
            android:exported="false" />
        <activity
            android:name=".TablesActivity"
            android:exported="false" />
        <activity
            android:name=".ProfileActivity"
            android:exported="false" />
        <activity
            android:name=".RegisterActivity"
            android:exported="false" />
        <activity
            android:name=".LoginActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name=".MainActivity"
            android:exported="false" />
    </application>

</manifest>

===== src/test/java/com/labdevs/comandar/ExampleUnitTest.java =====
package com.labdevs.comandar;

import org.junit.Test;

import static org.junit.Assert.*;

/**
 * Example local unit test, which will execute on the development machine (host).
 *
 * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
 */
public class ExampleUnitTest {
    @Test
    public void addition_isCorrect() {
        assertEquals(4, 2 + 2);
    }
}

===== build.gradle.kts =====
plugins {
    alias(libs.plugins.android.application)
}

android {
    namespace = "com.labdevs.comandar"
    compileSdk = 36

    defaultConfig {
        applicationId = "com.labdevs.comandar"
        minSdk = 24
        targetSdk = 36
        versionCode = 1
        versionName = "1.0"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            isMinifyEnabled = false
            proguardFiles(
                getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
            )
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    buildFeatures {
        viewBinding = true
    }
}

dependencies {

    implementation(libs.appcompat)
    implementation(libs.material)
    implementation(libs.activity)
    implementation(libs.constraintlayout)
    implementation(libs.room.runtime)
    implementation(libs.recyclerview)
    testImplementation(libs.junit)
    androidTestImplementation(libs.ext.junit)
    androidTestImplementation(libs.espresso.core)
    annotationProcessor(libs.room.compiler)
}
